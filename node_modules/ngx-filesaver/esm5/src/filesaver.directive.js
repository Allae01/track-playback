var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
import { Directive, ElementRef, Input, HostListener, EventEmitter, Output } from '@angular/core';
import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';
import { FileSaverService } from './filesaver.service';
var FileSaverDirective = /** @class */ (function () {
    function FileSaverDirective(el, fss, httpClient) {
        this.el = el;
        this.fss = fss;
        this.httpClient = httpClient;
        this.method = 'GET';
        this.success = new EventEmitter();
        this.error = new EventEmitter();
        if (!fss.isFileSaverSupported) {
            el.nativeElement.classList.add("filesaver__not-support");
        }
    }
    FileSaverDirective.prototype.getName = function (res) {
        return decodeURI(this.fileName || res.headers.get('filename') || res.headers.get('x-filename'));
    };
    FileSaverDirective.prototype._click = function () {
        var _this = this;
        if (!this.fss.isFileSaverSupported) {
            return;
        }
        var req = this.http;
        if (!req) {
            var params = new HttpParams();
            var query = this.query || {};
            // tslint:disable-next-line:forin
            for (var item in query) {
                params.set(item, query[item]);
            }
            req = this.httpClient.request(this.method, this.url, {
                observe: 'response',
                responseType: 'blob',
                headers: this.header,
                params: params,
            });
        }
        this.setDisabled(true);
        req.subscribe(function (res) {
            if (res.status !== 200 || res.body.size <= 0) {
                _this.error.emit(res);
                return;
            }
            _this.fss.save(res.body, _this.getName(res));
            _this.success.emit(res);
        }, function (err) { return _this.error.emit(err); }, function () { return _this.setDisabled(false); });
    };
    FileSaverDirective.prototype.setDisabled = function (status) {
        var el = this.el.nativeElement;
        el.disabled = status;
        el.classList[status ? 'add' : 'remove']("filesaver__disabled");
    };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FileSaverDirective.prototype, "method", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Observable)
    ], FileSaverDirective.prototype, "http", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FileSaverDirective.prototype, "query", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FileSaverDirective.prototype, "header", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FileSaverDirective.prototype, "url", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], FileSaverDirective.prototype, "fileName", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FileSaverDirective.prototype, "success", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FileSaverDirective.prototype, "error", void 0);
    __decorate([
        HostListener('click'),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], FileSaverDirective.prototype, "_click", null);
    FileSaverDirective = __decorate([
        Directive({
            selector: '[fileSaver]',
            exportAs: 'fileSaver',
        }),
        __metadata("design:paramtypes", [ElementRef, FileSaverService, HttpClient])
    ], FileSaverDirective);
    return FileSaverDirective;
}());
export { FileSaverDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmlsZXNhdmVyLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1maWxlc2F2ZXIvIiwic291cmNlcyI6WyJzcmMvZmlsZXNhdmVyLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakcsT0FBTyxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQWdCLE1BQU0sc0JBQXNCLENBQUM7QUFDNUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUNsQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQU12RDtJQVVFLDRCQUFvQixFQUFpQyxFQUFVLEdBQXFCLEVBQVUsVUFBc0I7UUFBaEcsT0FBRSxHQUFGLEVBQUUsQ0FBK0I7UUFBVSxRQUFHLEdBQUgsR0FBRyxDQUFrQjtRQUFVLGVBQVUsR0FBVixVQUFVLENBQVk7UUFUM0csV0FBTSxHQUFHLEtBQUssQ0FBQztRQU1MLFlBQU8sR0FBRyxJQUFJLFlBQVksRUFBc0IsQ0FBQztRQUNqRCxVQUFLLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztRQUdqRCxJQUFJLENBQUMsR0FBRyxDQUFDLG9CQUFvQixFQUFFO1lBQzdCLEVBQUUsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQyxDQUFDO1NBQzFEO0lBQ0gsQ0FBQztJQUVPLG9DQUFPLEdBQWYsVUFBZ0IsR0FBdUI7UUFDckMsT0FBTyxTQUFTLENBQUMsSUFBSSxDQUFDLFFBQVEsSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsQ0FBQyxDQUFDO0lBQ2xHLENBQUM7SUFH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OlsiaW1wb3J0IHsgRGlyZWN0aXZlLCBFbGVtZW50UmVmLCBJbnB1dCwgSG9zdExpc3RlbmVyLCBFdmVudEVtaXR0ZXIsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgSHR0cENsaWVudCwgSHR0cFBhcmFtcywgSHR0cFJlc3BvbnNlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uL2h0dHAnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgRmlsZVNhdmVyU2VydmljZSB9IGZyb20gJy4vZmlsZXNhdmVyLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbZmlsZVNhdmVyXScsXG4gIGV4cG9ydEFzOiAnZmlsZVNhdmVyJyxcbn0pXG5leHBvcnQgY2xhc3MgRmlsZVNhdmVyRGlyZWN0aXZlIHtcbiAgQElucHV0KCkgbWV0aG9kID0gJ0dFVCc7XG4gIEBJbnB1dCgpIGh0dHA6IE9ic2VydmFibGU8SHR0cFJlc3BvbnNlPEJsb2I+PjtcbiAgQElucHV0KCkgcXVlcnk6IGFueTtcbiAgQElucHV0KCkgaGVhZGVyOiBhbnk7XG4gIEBJbnB1dCgpIHVybDogc3RyaW5nO1xuICBASW5wdXQoKSBmaWxlTmFtZTogc3RyaW5nO1xuICBAT3V0cHV0KCkgcmVhZG9ubHkgc3VjY2VzcyA9IG5ldyBFdmVudEVtaXR0ZXI8SHR0cFJlc3BvbnNlPEJsb2I+PigpO1xuICBAT3V0cHV0KCkgcmVhZG9ubHkgZXJyb3IgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmPEhUTUxCdXR0b25FbGVtZW50PiwgcHJpdmF0ZSBmc3M6IEZpbGVTYXZlclNlcnZpY2UsIHByaXZhdGUgaHR0cENsaWVudDogSHR0cENsaWVudCkge1xuICAgIGlmICghZnNzLmlzRmlsZVNhdmVyU3VwcG9ydGVkKSB7XG4gICAgICBlbC5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoYGZpbGVzYXZlcl9fbm90LXN1cHBvcnRgKTtcbiAgICB9XG4gIH1cblxuICBwcml2YXRlIGdldE5hbWUocmVzOiBIdHRwUmVzcG9uc2U8QmxvYj4pIHtcbiAgICByZXR1cm4gZGVjb2RlVVJJKHRoaXMuZmlsZU5hbWUgfHwgcmVzLmhlYWRlcnMuZ2V0KCdmaWxlbmFtZScpIHx8IHJlcy5oZWFkZXJzLmdldCgneC1maWxlbmFtZScpKTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2NsaWNrJylcbiAgX2NsaWNrKCkge1xuICAgIGlmICghdGhpcy5mc3MuaXNGaWxlU2F2ZXJTdXBwb3J0ZWQpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgbGV0IHJlcSA9IHRoaXMuaHR0cDtcbiAgICBpZiAoIXJlcSkge1xuICAgICAgY29uc3QgcGFyYW1zID0gbmV3IEh0dHBQYXJhbXMoKTtcbiAgICAgIGNvbnN0IHF1ZXJ5ID0gdGhpcy5xdWVyeSB8fCB7fTtcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpmb3JpblxuICAgICAgZm9yIChjb25zdCBpdGVtIGluIHF1ZXJ5KSB7XG4gICAgICAgIHBhcmFtcy5zZXQoaXRlbSwgcXVlcnlbaXRlbV0pO1xuICAgICAgfVxuXG4gICAgICByZXEgPSB0aGlzLmh0dHBDbGllbnQucmVxdWVzdCh0aGlzLm1ldGhvZCwgdGhpcy51cmwsIHtcbiAgICAgICAgb2JzZXJ2ZTogJ3Jlc3BvbnNlJyxcbiAgICAgICAgcmVzcG9uc2VUeXBlOiAnYmxvYicsXG4gICAgICAgIGhlYWRlcnM6IHRoaXMuaGVhZGVyLFxuICAgICAgICBwYXJhbXMsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0aGlzLnNldERpc2FibGVkKHRydWUpO1xuICAgIHJlcS5zdWJzY3JpYmUoXG4gICAgICByZXMgPT4ge1xuICAgICAgICBpZiAocmVzLnN0YXR1cyAhPT0gMjAwIHx8IHJlcy5ib2R5LnNpemUgPD0gMCkge1xuICAgICAgICAgIHRoaXMuZXJyb3IuZW1pdChyZXMpO1xuICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmZzcy5zYXZlKHJlcy5ib2R5LCB0aGlzLmdldE5hbWUocmVzKSk7XG4gICAgICAgIHRoaXMuc3VjY2Vzcy5lbWl0KHJlcyk7XG4gICAgICB9LFxuICAgICAgZXJyID0+IHRoaXMuZXJyb3IuZW1pdChlcnIpLFxuICAgICAgKCkgPT4gdGhpcy5zZXREaXNhYmxlZChmYWxzZSksXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0RGlzYWJsZWQoc3RhdHVzOiBib29sZWFuKSB7XG4gICAgY29uc3QgZWwgPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQ7XG4gICAgZWwuZGlzYWJsZWQgPSBzdGF0dXM7XG4gICAgZWwuY2xhc3NMaXN0W3N0YXR1cyA/ICdhZGQnIDogJ3JlbW92ZSddKGBmaWxlc2F2ZXJfX2Rpc2FibGVkYCk7XG4gIH1cbn1cbiJdfQ==